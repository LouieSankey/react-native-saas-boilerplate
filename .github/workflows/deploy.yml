name: Expo CI/CD to TestFlight

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: npm install

      - name: Build iOS archive
        run: expo build:ios -t archive

      - name: Publish OTA update
        run: expo publish

      - name: Create release channel
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"query": "mutation { createReleaseChannel(input: { name: \"testflight\" }) { clientMutationId, releaseChannel { id } } }" }' https://expo.io/graphql

      - name: Set default OTA release
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"query": "mutation { updateProject(input: { slug: \"<your-project-slug>\", releaseChannelId: \"<your-release-channel-id>\" }) { clientMutationId, project { slug, defaultReleaseChannel { name } } } }" }' https://expo.io/graphql

      - name: Install Fastlane
        run: bundle install --gemfile ios/Gemfile

      - name: Upload to TestFlight
        run: |
          fastlane deliver --ipa "ios/build/boilerplate.ipa" --skip_screenshots --skip_metadata --skip_app_version_update

      - name: Distribute to TestFlight
        run: |
          fastlane pilot upload --ipa "ios/build/boilerplate.ipa" --skip_submission --skip_waiting_for_build_processing
